/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cardgame;

import cardgame.solitaire.Tumpukan;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JComponent;

/**
 *
 * @author Niwa / Kurniawan - 205314148
 */
public class Solitaire extends javax.swing.JFrame {

    /**
     * Creates new form Solitaire
     */
    public Solitaire() {
        initComponents();
        setLocationRelativeTo(null);
        JComponent winPanel = new JComponent() {
            @Override
            public void paintComponent(Graphics g) {
                g.setColor(new Color(0, 0, 0, 0.4f));
                g.fillRect(0, menubar.getHeight(), getWidth(), getHeight());
                g.setColor(Color.GREEN);
                g.setFont(new Font("TimesRoman", Font.BOLD, 42));
                g.drawString("--- YOU WIN ---", getWidth() / 3, getHeight() / 2);
                g.setColor(Color.WHITE);
                g.setFont(new Font("TimesRoman", Font.PLAIN, 18));
                g.drawString("- click anywhere to continue -", getWidth() / 3 + 40, getHeight() / 2 + 30);
            }
        };
        gamePanel1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                if (isWin()) {
                    setGlassPane(winPanel);
                    getGlassPane().setVisible(true);
                    getGlassPane().addMouseListener(new MouseAdapter() {
                        @Override
                        public void mouseClicked(MouseEvent e) {
                            getGlassPane().setVisible(false);
                        }
                    });
                }

            }
        });
    }

    public boolean isWin() {
        Tumpukan[] terurut = gamePanel1.getTerurut();
        for (Tumpukan x : terurut) {
            if ((x.getTumpukan().size() - 1) != 13) {
                return false;
            }
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gamePanel1 = new cardgame.solitaire.GamePanel();
        menubar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        btnNewGame = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(840, 600));
        getContentPane().add(gamePanel1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("Game");

        btnNewGame.setText("New Game...");
        btnNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewGameActionPerformed(evt);
            }
        });
        jMenu1.add(btnNewGame);

        menubar.add(jMenu1);

        setJMenuBar(menubar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewGameActionPerformed
        dispose();
        main(null);
    }//GEN-LAST:event_btnNewGameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            javax.swing.UIManager.setLookAndFeel(new com.formdev.flatlaf.FlatLightLaf());
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            System.err.println(ex.getMessage());
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Solitaire().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btnNewGame;
    private cardgame.solitaire.GamePanel gamePanel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar menubar;
    // End of variables declaration//GEN-END:variables
}
